<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LightBuzz.Azure</name>
    </assembly>
    <members>
        <member name="T:LightBuzz.Azure.AppServiceTableDAO`1">
            <summary>
            A generic table data access object.
            </summary>
            <typeparam name="T">The type of table to handle.</typeparam>
        </member>
        <member name="P:LightBuzz.Azure.AppServiceTableDAO`1.TableLocal">
            <summary>
            The database table to handle.
            </summary>
        </member>
        <member name="P:LightBuzz.Azure.AppServiceTableDAO`1.TableCloud">
            <summary>
            The database table to handle.
            </summary>
        </member>
        <member name="P:LightBuzz.Azure.AppServiceTableDAO`1._supportsLocalStore">
            <summary>
            Specifies whether the app stores data locally.
            </summary>
        </member>
        <member name="M:LightBuzz.Azure.AppServiceTableDAO`1.#ctor(LightBuzz.Azure.LightBuzzMobileServiceClient)">
            <summary>
            Creates a new instance of the data access object.
            </summary>
            <param name="azureClient">The Azure App Service client.</param>
        </member>
        <member name="M:LightBuzz.Azure.AppServiceTableDAO`1.Pull(System.Threading.CancellationToken,System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Pulls the data from the remote Azure App Service and stores them into the local database.
            </summary>
            <param name="ct">The cancellation token.</param>
            <param name="uniqueQueryId">The unique ID of the query.</param>
            <param name="predicate">The predicate to use.</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.AppServiceTableDAO`1.Insert(`0)">
            <summary>
            Performs a database Insert operation.
            </summary>
            <param name="objectToSave">The object to save.</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.AppServiceTableDAO`1.Update(`0)">
            <summary>
            Performs a database Update operation.
            </summary>
            <param name="objectToUpdate">The object to update.</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.AppServiceTableDAO`1.Delete(`0)">
            <summary>
            Performs a database Delete operation.
            </summary>
            <param name="objectToDelete">The object to delete.</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.AppServiceTableDAO`1.FindAll">
            <summary>
            Performs a database Get operation and returns all of the items included in the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.AppServiceTableDAO`1.FindAll(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Performs a database Get operation and returns all of the items that correspond to the specified predicate.
            </summary>
            <param name="predicate">The predicate to use.</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.AppServiceTableDAO`1.FindById(System.String)">
            <summary>
            Performs a database Get operation and returns the item that corresponds to the specified id.
            </summary>
            <param name="id">The id to find</param>
            <returns>The requested T object</returns>
        </member>
        <member name="T:LightBuzz.Azure.LightBuzzHttpsHandler">
            <summary>
            A Unity-ready secure HTTPS handler.
            </summary>
        </member>
        <member name="F:LightBuzz.Azure.LightBuzzHttpsHandler._result">
            <summary>
            The response from the server.
            </summary>
        </member>
        <member name="F:LightBuzz.Azure.LightBuzzHttpsHandler._authorizationToken">
            <summary>
            The authorization token for the request.
            </summary>
        </member>
        <member name="P:LightBuzz.Azure.LightBuzzHttpsHandler.ContentType">
            <summary>
            The Content Type header type (default: application/json).
            </summary>
        </member>
        <member name="P:LightBuzz.Azure.LightBuzzHttpsHandler.ZumoApiVersion">
            <summary>
            The ZUMO API version number.
            </summary>
        </member>
        <member name="P:LightBuzz.Azure.LightBuzzHttpsHandler.Encoding">
            <summary>
            The encoding of the response message.
            </summary>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzHttpsHandler.#ctor">
            <summary>
            Creates a new LightBuzz secure HTTPS handler.
            </summary>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzHttpsHandler.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new LightBuzz secure HTTPS handler with the specified parameters.
            </summary>
            <param name="contentType">The Content Type header type.</param>
            <param name="zumoApiVersion">The ZUMO API version number.</param>
            <param name="encoding">The encoding of the response message.</param>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzHttpsHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            A Unity-ready implementation of a secure HTTPS method to send the request.
            </summary>
            <param name="request">The request to send to server.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The response from the server.</returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzHttpsHandler.SendHttpWebRequest(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Sends an Http Web Request.
            </summary>
            <param name="request">The request message.</param>
            <param name="contentArray">The request content.</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzHttpsHandler.SendUnityRequest(System.String,System.Byte[],System.String)">
            <summary>
            Sends a Unity Web Request.
            </summary>
            <param name="url">The request absolute uri.</param>
            <param name="contentArray">The request content.</param>
            <param name="method">The request method.</param>
            <returns>An IEnumerator with the response text.</returns>
        </member>
        <member name="T:LightBuzz.Azure.LightBuzzMobileServiceClient">
            <summary>
            A Unity-ready MobileServiceClient.
            Must be extended by a subclass.
            </summary>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.DefineTables">
            <summary>
            Defines the tables in the local store. 
            Method must be implemented in a subclass.
            e.g.
            <code>
            protected override void DefineTables()
            {
               LocalStore.DefineTable<TodoItem/>();
            }
            </code>
            </summary>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.Pull(System.Threading.CancellationToken)">
            <summary>
            Pulls the data from the remote Azure App Service and stores them into the local database.
            Method must be implemented in a subclass.
            e.g.
            <code>
            public override async Task Pull()
            {
               AppServiceTableDAO<TodoItem/> todoTableDao = new AppServiceTableDAO<TodoItem/>(this);
               await todoTableDao.Pull(new CancellationToken(), "TodoItems", x => x.Id != null);
            }
            </code>
            </summary>
            <param name="ct">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="F:LightBuzz.Azure.LightBuzzMobileServiceClient.DefaultLocalDatabaseNamePattern">
            <summary>
            The default database name pattern.
            </summary>
        </member>
        <member name="F:LightBuzz.Azure.LightBuzzMobileServiceClient.LocalStore">
            <summary>
            The MobileServiceSQLiteStore that connects to the local database.
            </summary>
        </member>
        <member name="P:LightBuzz.Azure.LightBuzzMobileServiceClient.SupportsLocalStore">
            <summary>
            Specifies whether the app will store data locally.
            </summary>
        </member>
        <member name="P:LightBuzz.Azure.LightBuzzMobileServiceClient.DatabaseName">
            <summary>
            The local SQLite database name.
            </summary>
        </member>
        <member name="F:LightBuzz.Azure.LightBuzzMobileServiceClient._localDatabasePath">
            <summary>
            The local SQLite database path.
            </summary>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of the LightBuzzMobileServiceClient. 
            </summary>
            <param name="mobileAppUri">The Azure App Service URI.</param>
            <param name="supportLocal">Specifies whether a local database is supported.</param>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.#ctor(System.String,System.Boolean,System.Net.Http.HttpMessageHandler)">
            <summary>
            Creates a new instance of the LightBuzzMobileServiceClient. 
            </summary>
            <param name="mobileAppUri">The Azure App Service URI.</param>
            <param name="supportLocal">Specifies whether a local database is supported.</param>
            <param name="handler">The HTTP handler to use.</param>
        </member>
        <member name="P:LightBuzz.Azure.LightBuzzMobileServiceClient.LocalDatabasePath">
            <summary>
            Returns the local SQLite database absolute path.
            </summary>
        </member>
        <member name="P:LightBuzz.Azure.LightBuzzMobileServiceClient.LocalDatabaseConnectionString">
            <summary>
            Returns the local SQLite database absolute path.
            </summary>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.InitStore(System.String)">
            <summary>
            Initializes the local SQLite database.
            </summary>
            <param name="localDatabasePath">The full path to the local database file, e.g. Path.Combine(Application.persistentDataPath, "database.db").</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.InitStore">
            <summary>
            Initializes the local SQLite database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.SyncStore">
            <summary>
            Syncs with the remote Azure App Service (pull/push operations).
            </summary>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.SyncStore(System.Threading.CancellationToken)">
            <summary>
            Syncs with the remote Azure App Service (pull/push operations).
            </summary>
            <param name="ct">The Cancellation Token.</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.Push">
            <summary>
            Pushes the data stored in the local SQLite database to the remote Azure App Service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.Push(System.Threading.CancellationToken)">
            <summary>
            Pushes the data stored in the local SQLite database to the remote Azure App Service.
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.Pull">
            <summary>
            Pulls the data from the remote Azure App Service and stores them into the local database.
            Method must be implemented in a subclass.
            e.g.
            public override async Task Pull()
            {
               AppServiceTableDAO<TodoItem/> todoTableDao = new AppServiceTableDAO<TodoItem/>(this);
               await todoTableDao.Pull(new CancellationToken(), "TodoItems", x => x.Id != null);
             }
            </summary>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.Init">
            <summary>
            Initializes local SQLite database, if local store is supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.Sync">
            <summary>
            Syncs with the remote Azure App Service, if local store is supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClient.InitializeLocalStore">
            <summary>
            Initializes local SQLite database connection and sync.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LightBuzz.Azure.LightBuzzMobileServiceClientCloudOnly">
            <summary>
            Represents an Azure Service Client that has no Local Store support.
            </summary>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClientCloudOnly.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:LightBuzz.Azure.LightBuzzMobileServiceClientCloudOnly"/>.
            </summary>
            <param name="mobileAppUri">The Azure service URI.</param>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClientCloudOnly.DefineTables">
            <summary>
            Defines the database tables in managed code.
            </summary>
        </member>
        <member name="M:LightBuzz.Azure.LightBuzzMobileServiceClientCloudOnly.Pull(System.Threading.CancellationToken)">
            <summary>
            Pulls the remote data from the server.
            </summary>
            <param name="ct">The Cancellation Token.</param>
            <returns></returns>
        </member>
        <member name="T:LightBuzz.Azure.NamespaceDoc">
            <summary>
            LightBuzz Azure SDK for Unity3D: a framework that allows you to consume remote Azure App services and store data locally.
            </summary>
        </member>
    </members>
</doc>
